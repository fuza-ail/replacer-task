name: deploy

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "config-example/**"
      - ".github/workflows/deploy.yaml"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: choice
        options:
          - staging
          - production
        default: "staging"

jobs:
  create-pr:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Run Replacer
        working-directory: config-example
        run: go run main.go -key currency -value AUD

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.TOKEN }}
          commit-message: "Edit Configuration"
          title: "Deploy Configuration Changes"
          body: |
            This pull request was automatically

            Checkout the branch `${{ github.actor }}/deploy-${{ github.event.inputs.environment }}` to see the changes.
          branch: "${{ github.actor }}/generate-${{ github.event.inputs.environment }}"
          base: "main"
          labels: "automated"
          assignees: ${{ github.actor }}
          draft: false

  deploy:
    runs-on: ubuntu-latest
    needs: create-pr
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create SSH directory
        run: mkdir -p ~/.ssh

      - name: Add SSH Host Key
        run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USER }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          scp -o StrictHostKeyChecking=no -i key.pem -r ./config-example/apps ./config-example/dbs ./config-example/services ./config-example/tools $USERNAME@$HOST:~/
